#!/bin/bash

set -euo pipefail
IFS=$'\n\t'
# Strict mode ^

# Functions go here :

downloadContent() {
  echo "downloadContent function executed"
  echo "Thread URL is: " $threadURL
  echo "Board name is: " $boardName
  echo "Thread number is: " $threadNumber
  # wget -nd -r --level=1 -e robots=off -A jpg,jpeg,png,webp,gif,webm,tmp,html -H --wait 1 $threadURL

  wget -nd -r -p -nd -e robots=off -D i.4cdn.org -A jpg,jpeg,png,webp,gif,webm,tmp,html,mp4,mp3,m4a -H $threadURL/ -q --show-progress

  deleteMinis
}

downloadThread() {
  echo "downloadThread function executed"
  echo "Thread URL is: " $threadURL
  echo "Board name is: " $boardName
  echo "Thread number is: " $threadNumber

  # Notes to self :
  # What some bro on 4chan gave to me to answer this issue :
  # wget -r -H -D i.4cdn.org,boards.4channel.org -I "$boardName",thread -p -P . -A html,jpg,jpeg,gif,png,webm https://boards.4channel.org/$boardName/thread/<thread#> -e robots=off --wait 1 $threadURL
  # My modified version can be found below
  # wget -r -H --page-requisites -D i.4cdn.org/$boardName , boards.4channel.org/$boardName, boards.4chan.org/$boardName -I "$boardName",thread -p -P --convert-links -A html,jpg,jpeg,gif,png,webm https://boards.4channel.org/$boardName/thread/$threadNumber -e robots=off --wait 1 $threadURL
  #
  # The part that does not work is the -D flag where it tries to just allow itself to download from those URLs. It has to be fully recursive or limit the recursion for now.

  # Notes to self ^^

  wget -m -l 1 -np -nd -p -e robots=off -w 1 -k $threadURL -q --show-progress

  deleteMinis
}

downloadEverything() {
  echo "downloadEverything function executed"
  echo "Thread URL is: " $threadURL
  echo "Board name is: " $boardName
  echo "Thread number is: " $threadNumber

  wget -m -l 1 -nd -np -e robots=off -k -w 1 $threadURL -q --show-progress
  wget -nd -np -r -p -e robots=off -D i.4cdn.org -A jpg,jpeg,png,webp,gif,webm,tmp,html,mp4,mp3,m4a -H $threadURL/ -q --show-progress

  deleteMinis
      
}

deleteMinis() {
    echo "Deleting preview files now >:D"
    find -type f -name '*s.*' -delete

}
# STARTS HERE, aka querying the user, all of the special functions go above
# $(tput setaf 3) is used for making the text green.


#note to self, font used for the 4down ascii logo:
#smslant 

#https://www.fontchanger.net/ascii-text.html



echo "					Cipher's 4chan thread download tool"
printf "
  / // / ____/ /___ _      ______
 / // /_/ __  / __ \\ | /| / / __ \\
/__  __/ /_/ / /_/ / |/ |/ / / / /
  /_/  \\____/\\____/|__/|__/_/ /_/
" | lolcrab

echo "As a note you should also have cd'd into the directory where you want all of these contents to download to" | lolcrab
echo "Enter the URL of the thread that you want to download: " | lolcrab
read -p "" threadURL
#echo "$threadURL"  |lolcrab

urlLength=${#threadURL}

# https://boards.4channel.org/wsg/thread/4483299
# Example thread ^^^

# Make a copy of threadURL (original value inputted by the user) into threadURLStripped to modify
threadURLStripped=$threadURL
#echo $threadURLStripped

threadURLStripped="${threadURLStripped#https://boards.4channel.org}"
threadURLStripped="${threadURLStripped#https://boards.4chan.org}"
#echo "$threadURLStripped"
threadURLStripped=${threadURLStripped//thread/}
#echo "$threadURLStripped"
threadURLStripped=${threadURLStripped///}
#echo "$threadURLStripped"
threadURLStripped=${threadURLStripped//[0-9]/}
#echo "$threadURLStripped"

boardName=$threadURLStripped

threadNumStripped=$threadURL
threadNumStripped="${threadNumStripped#https://boards.4channel.org}"
#echo "$threadURLStripped"
threadNumStripped=${threadNumStripped//thread/}
#echo "$threadNumStripped"
threadNumStripped=${threadNumStripped///}
#echo "$threadNumStripped"
threadNumStripped=${threadNumStripped//[!0-9]/}
#echo "$threadNumStripped"

threadNumber=$threadNumStripped

printf "Which of the following choices do you want? \n 1) Download just the content from the thread (images and videos). \n 2) Download a copy of the thread (does not include the images/videos as their own files) . \n 3) 2 and 1 combined, it downloads all of the content and a visible version of the thread!\n"
read -p "Answer choice, here (Number associated with option): " userChoice
echo $userChoice
read -p "Are you ready to proceed? (Enter y/n): " proceed
if [ $proceed == y ] || [ $proceed == Y ]; then
  echo "Commencing!"
fi

# use case statement to determine which choice the user has chosen
case $userChoice in
1)
  downloadContent
  ;;
2)
  downloadThread
  ;;
3)
  downloadEverything
  ;;
*)
  echo "Invalid choice"
  ;;
esac

# Wow, you're reading this! That must mean that you're reading over the software you use! Yay!
